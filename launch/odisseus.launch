<launch>

	!-- Load the Odisseus URDF model into the parameter server -->
	<param name="robot_description" textfile="$(find odisseus)/urdf/odisseus.urdf" />

	<!-- Start Gazebo with an empty world. This must match with the map we are
    using in the map_server node below -->
	<!--<include file="$(find gazebo_ros)/launch/empty_world.launch"/>-->

	<!-- Spawn Odisseus in Gazebo, taking the description from the parameter server.
	This will spawn Odisseus and placed at the origin of the world-->
	<!--<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model odisseus" />-->
			
	<!-- This node will spawn Odisseas at x=8 and y=-8 in the world coordinates-->
	<!--<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model odisseasbot -x 8 -y -8" />-->
			
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
		
	<!-- The node that handles the map of the world that the robot moves-->
	<!--<node name="map_server" pkg="map_server" type="map_server" args="$(find odisseus)/maps/empty_world.yaml"/>-->


	<!--Adaptive Monte Carlo Localization-->
	<!--<include file="$(find amcl)/examples/amcl_diff.launch"/>-->

	<!-- The move_base node -->
	<!--<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

		<rosparam file="$(find odisseus)/navigation/costmap_common_params.yaml" command="load" ns="global_costmap" />
		<rosparam file="$(find odisseus)/navigation/costmap_common_params.yaml" command="load" ns="local_costmap" />
		<rosparam file="$(find odisseus)/navigation/local_costmap_params.yaml" command="load" />
		<rosparam file="$(find odisseus)/navigation/global_costmap_params.yaml" command="load" />
		<rosparam file="$(find odisseus)/navigation/base_local_planner_params.yaml" command="load" />

	</node>-->

	<!--the mission planner node that odisseus is using-->
   <!--<node name="mission_planner_node" pkg="odisseus" type="mission_planner_node"/>-->
				 
</launch>
